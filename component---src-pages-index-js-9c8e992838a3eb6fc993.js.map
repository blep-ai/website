{"version":3,"sources":["webpack:///./src/components/OrderScaleShape/axis.js","webpack:///./src/components/OrderScaleShape/graph_body.js","webpack:///./src/components/OrderScaleShape/index.js","webpack:///./src/components/Tabs/Tab.js","webpack:///./src/components/Tabs/index.js","webpack:///./src/components/OrderBox/index.js","webpack:///./src/pages/index.js"],"names":["React","Component","GraphBody","props","state","avgText","onMouseEnter","bind","onMouseLeave","this","setState","preparePolygon","points","x","width","y","height","collector","data","map","coord","coordsToSvgCoords","concat","join","render","mean","x1","y1","x2","y2","className","strokeDasharray","textAnchor","style","fontSize","fontFamily","defaultProps","resolution","OrderScaleShape","dragging","selectedEl","onMouseDown","svgCoordsToCoords","i","e","target","coords","pl","pr","pb","pt","x0","y0","svgCoords","svgx","svgy","ref","viewBox","onMouseMove","CTM","refs","svg1","getScreenCTM","clientY","f","d","setCoords","onMouseUp","normalized","cx","cy","r","fill","Dots","key","AxisLabelX","Math","round","Tab","componentDidMount","addTab","id","title","shortTitle","activeTab","children","Tabs","tabs","prevActiveTab","tabsElements","newTab","isNewTabFound","prevState","removeTab","tabId","filter","tab","onClick","event","index","activeTabClass","inactiveTabClass","baseTabClass","display","transition","cursor","Children","child","cloneElement","ButtonsLongShorttoggleComponent","dir","setDir","transform","opacity","Scale","sum","reduce","pv","cv","Array","OrderBox","entryScale","tpScale","slScale","activeOrderTab","scaleName","hasOwnProperty","Error","min","max","scaleData","value","type","defaultValue","icon","faCog","OrderControls","length","LandingPage","Layout","includePreFooter","backgroundImage","SubscribeForm","src","href"],"mappings":"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","file":"component---src-pages-index-js-9c8e992838a3eb6fc993.js","sourcesContent":["import React from 'react';\n\nexport default class Axis extends React.Component {\n  prepareCords() {\n    let coords = {\n      x1: this.props.x,\n      y1: this.props.y\n    }\n\n    if(this.props.horizontal) {\n      coords.x2 = coords.x1 + this.props.length;\n      coords.y2 = coords.y1;\n    } else {\n      coords.x2 = coords.x1;\n      coords.y2 = coords.y1 + this.props.length;\n    }\n\n    return coords;\n  }\n\n  render() {\n    let coords = this.prepareCords();\n    return (\n      <line {...coords} stroke=\"green\" strokeWidth={2} />\n    )\n  }\n}\n","import React, {Fragment} from 'react';\n\nexport default class GraphBody extends React.Component {\n  // resolution in x and y directions\n  static defaultProps = { resolution: [100, 100] };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      avgText: 'x̄'\n    }\n    this.onMouseEnter = this.onMouseEnter.bind(this)\n    this.onMouseLeave = this.onMouseLeave.bind(this)\n  }\n\n  onMouseEnter() {\n    this.setState({avgText: \"average\"})\n  }\n\n  onMouseLeave() {\n    this.setState({avgText: \"x̄\"})\n  }\n\n  preparePolygon() {\n    // [right top, right btm, left bottom, otherpoints...]\n    let points = [`${this.props.x+this.props.width},${this.props.y-this.props.height} ${this.props.x+this.props.width},${this.props.y} ${this.props.x},${this.props.y}`];\n\n    let collector = this.props.data.map(coord => {\n      const [x, y] = this.props.coordsToSvgCoords(coord)\n      return ` ${x},${y}`;\n    });\n\n    return points.concat(collector).join(' ')\n  }\n\n  render() {\n    let points = this.preparePolygon()\n    let [x1, y1] = this.props.coordsToSvgCoords([this.props.data.mean, 0])\n    let [x2, y2] = this.props.coordsToSvgCoords([this.props.data.mean, 100])\n    return(\n      <Fragment>\n        <polygon points={points} />\n        <line x1={x1} y1={y1} x2={x2} y2={y2} className=\"stroke-current text-gray-500 stroke-1\" strokeDasharray=\".5 .5\"/>\n        <text\n          x={x1}\n          y={8}\n          textAnchor=\"middle\"\n          style={{fontSize:\".5rem\", fontFamily:\"auto\"}}\n          className=\"text-gray-500 select-none\"\n          onMouseEnter={this.onMouseEnter}\n          onMouseLeave={this.onMouseLeave}>\n          {this.state.avgText}\n        </text>\n      </Fragment>\n      )\n  }\n}\n","import React, { useState } from 'react';\nimport Axis from './axis';\nimport GraphBody from './graph_body';\n\nexport default class OrderScaleShape extends React.Component {\n  static defaultProps = { pb: 10, pl: 10, pt: 10, pr: 10};\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      dragging: false,\n      selectedEl: false\n    };\n    this.onMouseDown = this.onMouseDown.bind(this)\n    this.coordsToSvgCoords = this.coordsToSvgCoords.bind(this)\n    this.svgCoordsToCoords = this.svgCoordsToCoords.bind(this)\n  }\n\n  onMouseDown(i) {\n    return ((e) => {\n      this.setState({dragging: i, selectedEl: e.target})\n    }).bind(this)\n  }\n\n  // x0, y0 are bottom left coordinates\n  coordsToSvgCoords(coords) {\n    const width = this.props.width - this.props.pl - this.props.pr\n    const height = this.props.height - this.props.pb - this.props.pt\n    const x0 = this.props.pl\n    const y0 = this.props.height - this.props.pb\n\n    const svgx = x0 + coords[0] * width / this.props.resolution[0]\n    const svgy = y0 - coords[1] * height / this.props.resolution[1]\n    return [svgx, svgy]\n  }\n\n  svgCoordsToCoords(svgCoords) {\n    const [svgx, svgy] = svgCoords\n    const width = this.props.width - this.props.pl - this.props.pr\n    const height = this.props.height - this.props.pb - this.props.pt\n    const x0 = this.props.pl\n    const y0 = this.props.height - this.props.pb\n\n    const x = (svgx - x0) / width * this.props.resolution[0]\n    const y = (y0 - svgy) / height * this.props.resolution[1]\n    return [x, y]\n  }\n\n  render() {\n    return (\n      <svg\n        ref=\"svg1\"\n        className={this.props.className}\n        viewBox={`0 0 ${this.props.width} ${this.props.height}`}\n        onMouseMove={e => {\n          if (this.state.selectedEl) {\n            // mouse coords to svg coords\n            const CTM = this.refs.svg1.getScreenCTM()\n            const svgy = (e.clientY - CTM.f) / CTM.d\n            this.props.setCoords(this.state.dragging, this.svgCoordsToCoords([0, svgy])[1])\n          }\n        }}\n        onMouseUp={() => {\n          this.setState({selectedEl: null})\n          this.setState({dragging: false})\n        }}>\n        {/*<Axis\n          x={this.props.pl}\n          y={this.props.height - this.props.pb}\n          length={this.props.width - this.props.pl - this.props.pr}\n          horizontal={true}\n        />\n        <Axis\n          x={this.props.pl}\n          y={this.props.pt}\n          length={this.props.height - this.props.pb - this.props.pt}\n          horizontal={false}\n        />*/}\n        <GraphBody\n          x={this.props.pl}\n          y={this.props.height - this.props.pb}\n          width={this.props.width - this.props.pl - this.props.pr}\n          height={this.props.height - this.props.pb - this.props.pt}\n          resolution={this.props.resolution}\n          data={this.props.data}\n          coordsToSvgCoords={this.coordsToSvgCoords} />\n        <Dots\n          data={this.props.data}\n          onMouseDown={this.onMouseDown}\n          coordsToSvgCoords={this.coordsToSvgCoords} />\n        <AxisLabelX\n          data={this.props.data.normalized}\n          coordsToSvgCoords={this.coordsToSvgCoords} />\n        {\"<!-- End Points -->\"}\n        <circle cx={this.props.pl} cy={this.props.height - this.props.pb} r=\"2.5\" fill=\"white\" className=\"stroke-current text-blue-500\"/>\n        <circle cx={this.props.width-this.props.pr} cy={this.props.pt} r=\"2.5\" fill=\"white\" className=\"stroke-current text-blue-500\"/>\n      </svg>\n    )\n  }\n}\n\nexport const Dots = ({data, onMouseDown, coordsToSvgCoords}) => {\n  return data.map((coord, i) => {\n    const [cx, cy] = coordsToSvgCoords(coord)\n    return <circle\n      key={i}\n      cx={cx}\n      cy={cy}\n      r={2.5}\n      className=\"fill-current text-blue-500 cursor-ns-resize hover:text-blue-200\"\n      onMouseDown={onMouseDown(i)}\n      />\n  })\n}\n\nexport const AxisLabelX = ({data, coordsToSvgCoords}) => {\n  return data.map((coord, i) => {\n    const cx = coordsToSvgCoords(coord)[0]\n    return <text\n      key={i}\n      x={cx}\n      y={100}\n      textAnchor=\"middle\"\n      style={{fontSize:\".5rem\"}}\n      className=\"text-gray-500 pointer-events-none select-none\">\n      {Math.round(coord[1]*100)}\n    </text>\n  })\n}\n","import React from \"react\";\n\nexport default class Tab extends React.Component {\n  componentDidMount() {\n    this.props.addTab({\n      id: this.props.id,\n      title: this.props.title,\n      shortTitle: this.props.shortTitle\n    });\n  }\n\n  render() {\n    return this.props.activeTab.id === this.props.id && this.props.children;\n  }\n}\n","import React, { Component } from \"react\";\nimport Tab from './Tab'\n\nexport default class Tabs extends Component {\n  static Tab = Tab;\n\n  state = {\n    tabs: [],\n    prevActiveTab: {},\n    activeTab: this.props.activeTab,\n    tabsElements: []\n  };\n\n  addTab = newTab => {\n    let isNewTabFound;\n\n    for (let i in this.state.tabs) {\n      let tab = this.state.tabs[i];\n\n      if (tab.id === newTab.id) {\n        isNewTabFound = true;\n        break;\n      }\n    }\n\n    if (!isNewTabFound) {\n      this.setState((prevState, props) => {\n        return {\n          tabs: prevState.tabs.concat(newTab)\n        };\n      });\n    }\n  };\n\n  removeTab = tabId => {\n    this.setState((prevState, props) => {\n      return {\n        tabs: prevState.tabs.filter(tab => tab.id !== tabId)\n      };\n    });\n  };\n\n  onClick = tab => event => {\n    this.setState((prevState, props) => {\n      return {\n        prevActiveTab: prevState.activeTab,\n        activeTab: tab\n      };\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        {/*tabs container*/}\n        <nav className={this.props.className}>\n          <div>\n            <ul>\n              {this.state.tabs.map((tab, index) => (\n                <li\n                key={index}\n                className={(tab.id===this.state.activeTab.id ? `${this.props.activeTabClass} ` : `${this.props.inactiveTabClass} `) + this.props.baseTabClass}\n                onClick={this.onClick(tab)}\n                id={tab.id}\n                style={{\n                  display: \"inline-block\",\n                  transition: \"all 300ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n                  cursor: \"pointer\"\n                }}>\n                {tab.shortTitle ?\n                  <a>\n                    <span className=\"hidden sm:block\">{tab.title}</span>\n                    <span className=\"sm:hidden\">{tab.shortTitle}</span>\n                  </a>\n                  :\n                  <a>\n                    {tab.title}\n                  </a>\n                }\n                </li>\n              ))}\n            </ul>\n          </div>\n        </nav>\n\n        {React.Children.map(this.props.children, child =>\n          React.cloneElement(child, {\n            activeTab: this.state.activeTab,\n            addTab: this.addTab\n          })\n        )}\n      </div>\n    );\n  }\n}\n","import React, { useState } from 'react';\nimport OrderScaleShape from \"../OrderScaleShape\"\nimport Tabs from \"../Tabs\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCog } from '@fortawesome/free-solid-svg-icons'\n\nconst ButtonsLongShorttoggleComponent = ({dir, setDir}) => (\n  <svg width={50} height={175.5} viewBox=\"0 0 50 175.5\">\n    <defs>\n      <style>\n        {\n          \".c{fill:#fff;font-size:15px;font-family:Heebo-Medium, Heebo;font-weight:500;letter-spacing:0.155em;}\"\n        }\n      </style>\n    </defs>\n    <g transform=\"translate(0 175.5) rotate(-90)\">\n\n      {/* long btn */}\n      <g\n        className=\"transition duration-150 fill-current text-green-500 hover:text-green-700\"\n        onClick={setDir(1)}\n        >\n        <rect\n          opacity={dir ? 1 : 0.25}\n          width={87.5}\n          height={50}\n        />\n        <text className=\"c pointer-events-none select-none\" transform=\"translate(0 14.378)\">\n          <tspan x={20.845} y={16}>\n            {\"LONG\"}\n          </tspan>\n        </text>\n      </g>\n\n      {/* short btn */}\n      <g\n        className=\"transition duration-150 fill-current text-red-500 hover:text-red-700\"\n        onClick={setDir(0)}\n        >\n        <rect\n          opacity={!dir ? 1 : 0.25}\n          width={87.5}\n          height={50}\n          transform=\"translate(87.5)\"\n        />\n        <text className=\"c pointer-events-none select-none\" transform=\"translate(87.5 14.378)\">\n          <tspan x={14.947} y={16}>\n            {\"SHORT\"}\n          </tspan>\n        </text>\n      </g>\n    </g>\n  </svg>\n);\n\n// [[price, percentage], [$, %], ...]\nclass Scale extends Array {\n  // scale scaleData y coordinates find percentage\n  get normalized() {\n    const sum = this.reduce((pv, cv) => pv + cv[1], 0)\n    return this.map(coord => [coord[0], coord[1]/sum])\n  }\n\n  get mean() {\n    const num = this.reduce((pv, cv) => pv + (cv[0]*cv[1]), 0)\n    const den = this.reduce((pv, cv) => pv + cv[1], 0)\n    return num/den\n  }\n\n  set mean(x) {\n\n  }\n}\n\nexport default class OrderBox extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      dir: 1, // 1long 0short\n      //risk:\n      //expiry:\n      //invalidation:\n      entryScale: new Scale([1,10], [2, 15], [3, 20], [4, 30], [5, 40], [6, 60], [7, 80]),\n      tpScale: new Scale([1,10], [2, 15], [3, 20], [4, 30], [5, 40], [6, 60], [7, 80]),\n      slScale: new Scale([0, 40],[1,50], [2, 50], [3, 50], [4, 50], [5, 50], [6, 50], [7, 50]),\n      activeOrderTab: 0\n    }\n    this.setCoords = this.setCoords.bind(this)\n    this.setDir = this.setDir.bind(this)\n  }\n\n  setCoords(scaleName) {\n    const clamp = (min, max) => (value) =>\n      value < min ? min : value > max ? max : value;\n\n    if (!this.state.hasOwnProperty(scaleName)) throw new Error('order scale nonexistent')\n    return (x, y) => {\n      let scaleData = this.state[scaleName]\n      scaleData[x][1] = clamp(0, 100)(y)\n      this.setState({[scaleName]: scaleData})\n    }\n  }\n\n  setDir(dir) {\n    return () => {\n      this.setState({dir: dir})\n      // swap tp and sl\n      this.setState({tpScale: this.state.slScale, slScale: this.state.tpScale})\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        {/* tabs */}\n        <Tabs\n          activeTab={{id: this.props.activeTab || \"overview\"}}\n          className=\"bg-white px-8 pt-2 shadow-md mb-6 flex justify-center\"\n          baseTabClass=\"no-underline text-gray-300 border-b-2 border-transparent uppercase tracking-wide font-medium text-xs py-3 mr-8\"\n          activeTabClass=\"text-indigo-600 border-teal-400\"\n          inactiveTabClass=\"text-gray-300 border-transparent\">\n          <Tabs.Tab id=\"overview\" title=\"Overview\">\n            <div className=\"flex\">\n              <div className=\"flex-initial mx-4\">\n                <ButtonsLongShorttoggleComponent\n                  dir={this.state.dir}\n                  setDir={this.setDir} />\n              </div>\n              <div className=\"flex-grow\">\n                <table className=\"table-auto border-0 w-full text-sm\">\n                  <tbody>\n                    <tr className=\"border-b\">\n                      <td className=\"px-2 py-1 uppercase font-medium text-gray-500 tracking-wider\">Entry</td>\n                      <td className=\"px-2 py-1 font-bold\">\n                        <input className=\"appearance-none w-full text-gray-700 leading-tight focus:outline-none font-bold\" id=\"\" type=\"text\" defaultValue=\"123.4\" />\n                      </td>\n                      <td className=\"px-2 py-1 text-gray-500 text-right\"><FontAwesomeIcon icon={faCog} /></td>\n                    </tr>\n                    <tr className=\"border-b\">\n                      <td className=\"px-2 py-1 uppercase font-medium text-gray-500 tracking-wider\">Take Profit</td>\n                      <td className=\"px-2 py-1 font-bold\">133.45</td>\n                      <td className=\"px-2 py-1 text-gray-500 text-right\"><FontAwesomeIcon icon={faCog} /></td>\n                    </tr>\n                    <tr className=\"border-b\">\n                      <td className=\"px-2 py-1 uppercase font-medium text-gray-500 tracking-wider\">Stop Loss</td>\n                      <td className=\"px-2 py-1 font-bold\">{\"function\"}</td>\n                      <td className=\"px-2 py-1 text-gray-500 text-right\"><FontAwesomeIcon icon={faCog} /></td>\n                    </tr>\n                    <tr className=\"border-b\">\n                      <td className=\"px-2 py-1 uppercase font-medium text-gray-500 tracking-wider\">% Risk / Qty</td>\n                      <td className=\"px-2 py-1 font-bold\">2.5%&nbsp;<span className=\"text-gray-500\">now</span></td>\n                      <td className=\"px-2 py-1 text-gray-500 text-right\">4640</td>\n                    </tr>\n                    <tr className=\"border-b\">\n                      <td className=\"px-2 py-1 uppercase font-medium text-gray-500 tracking-wider\">Expiry</td>\n                      <td className=\"px-2 py-1 font-bold\">20/05/15 00:00 UTC</td>\n                      <td className=\"px-2 py-1 text-gray-500 text-right\">in 24 days</td>\n                    </tr>\n                    <tr className=\"border-b\">\n                      <td className=\"px-2 py-1 uppercase font-medium text-gray-500 tracking-wider\">Invalidation</td>\n                      <td className=\"px-2 py-1 font-bold\">{\"6h_TK < 6h_KJ\"}</td>\n                      <td className=\"px-2 py-1 text-gray-500 text-right\"></td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </Tabs.Tab>\n          <Tabs.Tab id=\"entry\" title=\"Entry\">\n            <OrderControls\n              dir={this.state.dir}\n              data={this.state.entryScale}\n              setCoords={this.setCoords('entryScale')}\n              />\n          </Tabs.Tab>\n          <Tabs.Tab id=\"tp\" title=\"Take Profit\" shortTitle=\"TP\">\n            <OrderControls\n              dir={!this.state.dir}\n              data={this.state.tpScale}\n              setCoords={this.setCoords('tpScale')}\n              />\n          </Tabs.Tab>\n          <Tabs.Tab id=\"sl\" title=\"Stop Loss\" shortTitle=\"SL\">\n            <OrderControls\n              dir={!this.state.dir}\n              data={this.state.slScale}\n              setCoords={this.setCoords('slScale')}\n              />\n          </Tabs.Tab>\n        </Tabs>\n      </div>\n    )\n  }\n}\n\nexport class OrderControls extends React.Component {\n  componentDidMount() {\n\n  }\n\n  render() {\n    return (\n      <div className=\"flex items-center\">\n        <div className=\"flex-initial mx-4 uppercase text-sm\">\n          <ul className=\"font-medium text-gray-500 tracking-wider\">\n            <li className=\"px-2 py-2\">Single</li>\n            <li className=\"px-2 py-2\">Multiple</li>\n            <li className=\"px-2 py-2 underline text-gray-800\">Scaled</li>\n            <li className=\"px-2 py-2\">{\"Function\"}</li>\n          </ul>\n        </div>\n        <div className=\"flex-grow\">\n          <OrderScaleShape\n            className={(this.props.dir ? 'text-green-500' : 'text-red-500') + ' fill-current mx-5 md:mx-10'}\n            data={this.props.data}\n            width={150}\n            height={100}\n            resolution={[this.props.data.length, 100]}\n            setCoords={this.props.setCoords} />\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { useState } from 'react'\nimport { Link } from 'gatsby'\nimport config from '../../config'\nimport Layout from '../components/Layout'\nimport OrderBox from \"../components/OrderBox\"\nimport SubscribeForm from \"../components/SubscribeForm\"\nimport { ReactComponent as Logo } from '../../static/img/logo.svg'\n\nconst LandingPage = () => {\n  let placeholderImg = (\n    <svg className=\"w-full\" xmlns=\"http://www.w3.org/2000/svg\" width=\"555\" height=\"380\" viewBox=\"0 0 555 380\">\n      <rect fill=\"#ddd\" width=\"555\" height=\"380\"/>\n      <text fill=\"rgba(0,0,0,0.5)\" font-family=\"sans-serif\" font-size=\"30\" dy=\"10.5\" font-weight=\"bold\" x=\"50%\" y=\"50%\" text-anchor=\"middle\">555x380</text>\n    </svg>\n  )\n\n  return (\n    <Layout includePreFooter={true}>\n\n      <div className=\"bg-white flex flex-col\">\n        <div className=\"container mx-auto px-8\">\n\n          <div className=\"bg-cover lg:bg-contain bg-top bg-no-repeat -mx-16\" style={{backgroundImage: `linear-gradient(to bottom, rgba(255,255,255,.5) 60%, rgba(255,255,255,1) 95%),url(\"/img/Mask Group 4@2x.png\")`}}>\n            <div className=\"mx-16\">\n\n              {/* hero */}\n              <main className=\"flex flex-wrap items-center text-center md:text-left my-12 py-48 lg:px-24\">\n                <div className=\"w-full md:w-full whitespace-pre-line\">\n                  <h1 className=\"text-5xl text-black leading-tight mb-6\">\n                    Order Management{`\\n`}\n                    <span className=\"font-bold\">for Humans</span>\n                  </h1>\n                  <SubscribeForm />\n                </div>\n              </main>\n\n\n              {/* subhero section */}\n              <div className=\"flex flex-wrap overflow-hidden text-center py-12 my-12 items-center\">\n\n                <div className=\"w-full overflow-hidden whitespace-pre-line\">\n                  <h2 className=\"text-3xl font-bold pb-2\">\n                    Become a trading{`\\n`}\n                    superhuman.\n                  </h2>\n                  <h3 className=\"text-lg\">\n                    Offload emotion and memory overhead to robots.{`\\n`}\n                    <span className=\"font-medium\">\n                      So you can focus.\n                    </span>\n                  </h3>\n                </div>\n\n              </div>\n            </div>\n          </div>\n\n          {/* first section */}\n          <div className=\"flex flex-wrap overflow-hidden text-left py-12 my-12 items-center\">\n            {/* left */}\n            <div className=\"w-full md:w-1/2 overflow-hidden\">\n              <OrderBox activeTab=\"overview\" />\n            </div>\n\n            {/* right */}\n            <div className=\"w-full md:w-1/2 overflow-hidden p-12 lg:px-24\">\n              <h2 className=\"text-2xl font-bold pb-6\">\n                Make fewer mistakes.\n              </h2>\n              <p className=\"text-base pb-6\">\n                Determine entries, take profits, and stop losses. Then set it and forget it. We’ll take care of the rest - and keep you updated.\n              </p>\n              {/* mini section */}\n              <div className=\"flex flex-wrap overflow-hidden -mx-6 whitespace-pre-line\">\n                <div className=\"px-6 w-1/2 overflow-hidden\">\n                  <h3 className=\"text-sm pb-2 font-medium\">\n                    Risk management\n                  </h3>\n                  <p className=\"text-xs\">\n                    Position sizes can be automatically calculated based on risk and trade parameters.\n                  </p>\n                </div>\n\n                <div className=\"px-6 w-1/2 overflow-hidden\">\n                  <h3 className=\"text-sm pb-2 font-medium\">\n                    Trade rules\n                  </h3>\n                  <p className=\"text-xs\">\n                    Protect yourself, from yourself.\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* second section */}\n          <div className=\"flex flex-wrap overflow-hidden text-left py-12 my-12 items-center\">\n            {/* right */}\n            <div className=\"md:order-2 w-full md:w-1/2 overflow-hidden\">\n              <OrderBox activeTab=\"entry\" />\n            </div>\n\n            {/* left */}\n            <div className=\"md:order-1 w-full md:w-1/2 overflow-hidden p-12 lg:px-24\">\n              <h2 className=\"text-2xl font-bold pb-6\">\n                Advanced order types.\n              </h2>\n              <p className=\"text-base pb-6\">\n                Dynamic orders based on technical indicators. Nonlinear scaling orders. OCO orders before your entry is executed.\n                Do what you need, without relying on exchange features.\n              </p>\n            </div>\n          </div>\n\n          {/* third section */}\n          <div className=\"flex flex-wrap overflow-hidden text-left py-12 my-12 items-center\">\n            {/* left */}\n            <div className=\"md:w-1/2 overflow-hidden\">\n              <img src=\"/img/increase_productivity@2x.png\"></img>\n            </div>\n\n            {/* right */}\n            <div className=\"md:w-1/2 overflow-hidden p-12 lg:px-24\">\n              <h2 className=\"text-2xl font-bold pb-6\">\n                Increase productivity\n              </h2>\n              <p className=\"text-base pb-6\">\n                Manage 10x the trade ideas across 10x the brokers.{`\\n`}\n                Develop strategies for multiple timeframes and asset classes without having to remember every detail.\n              </p>\n              {/* mini section */}\n              <div className=\"flex flex-wrap overflow-hidden -mx-6 whitespace-pre-line\">\n                <div className=\"px-6 w-1/2 overflow-hidden\">\n                  <h3 className=\"text-sm pb-2 font-medium\">\n                    Trade Journal\n                  </h3>\n                  <p className=\"text-xs\">\n                    Keep track of all your trade ideas, past and present.\n                  </p>\n                </div>\n\n                <div className=\"px-6 w-1/2 overflow-hidden\">\n                  <h3 className=\"text-sm pb-2 font-medium\">\n                    Charting\n                  </h3>\n                  <p className=\"text-xs\">\n                    View multiple active trades on a single chart.\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* fourth section */}\n          <div className=\"flex flex-wrap overflow-hidden text-left py-12 my-12 items-center\">\n            {/* right */}\n            <div className=\"md:order-2 w-full md:w-1/2 overflow-hidden\">\n              <img src=\"/img/Line Chart1.svg\"></img>\n            </div>\n\n            {/* left */}\n            <div className=\"md:order-1 w-full md:w-1/2 overflow-hidden p-12 lg:px-24\">\n              <h2 className=\"text-2xl font-bold pb-6\">\n                Trade Analytics\n              </h2>\n              <p className=\"text-base pb-6\">\n                See which of your strategies work, and eliminate those that don’t. Develop trade discipline that makes trading fun, rewarding, and most importantly, sustainable.\n              </p>\n              {/* mini section */}\n              <ul className=\"list-disc list-inside\">\n                <li>Real-time overview</li>\n                <li>Performance reports</li>\n                <li>Trade review</li>\n              </ul>\n            </div>\n          </div>\n\n          {/* pre footer image */}\n          {/*<img className=\"w-full px-\" src=\"/img/whiteboarding.svg\"></img>*/}\n          {/*<img className=\"w-full h-64\"></img>*/}\n\n          {/* cta */}\n          <div className=\"bg-gray-50\">\n            <div className=\"max-w-screen-xl mx-auto py-12 px-4 sm:px-6 lg:py-16 lg:px-8 lg:flex lg:items-center lg:justify-between\">\n              <h2 className=\"text-3xl leading-9 font-extrabold tracking-tight text-gray-900 sm:text-4xl sm:leading-10\">\n                Ready to dive in?\n                <br />\n                <span className=\"text-indigo-600\">Start trading today.</span>\n              </h2>\n              <div className=\"mt-8 flex lg:flex-shrink-0 lg:mt-0\">\n                <div className=\"inline-flex\">\n                  <a href=\"omh\" className=\"inline-flex items-center justify-center px-5 py-3 border border-transparent text-base leading-6 font-medium text-white bg-indigo-600 hover:bg-indigo-500 focus:outline-none focus:shadow-outline transition duration-150 ease-in-out\">\n                    Get started\n                  </a>\n                </div>\n                <div className=\"ml-3 inline-flex \">\n                  <a href=\"omhdemo\" className=\"inline-flex items-center justify-center px-5 py-3 border border-purple-500 text-base leading-6 font-medium text-indigo-600 bg-white hover:text-indigo-500 focus:outline-none focus:shadow-outline transition duration-150 ease-in-out\">\n                    Live demo\n                  </a>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </Layout>\n  )\n}\n\nexport default LandingPage\n"],"sourceRoot":""}