{"version":3,"sources":["webpack:///./src/pages/charts.js"],"names":["Chart","loadable","ssr","watermarkStyle","color","visible","text","fontSize","horzAlign","vertAlign","Charts","props","handleChange","bind","state","exchange","period","symbol","limit","options","alignLabels","timeScale","rightOffset","barSpacing","fixLeftEdge","lockVisibleTimeRangeOnResize","rightBarStaysOnScroll","borderVisible","borderColor","timeVisible","secondsVisible","layout","fontFamily","priceScale","watermark","sumOpenInterest","data","sumOpenInterestValue","topLongShortAccountRatio_longAccount","globalLongShortAccountRatio_longAccount","topLongShortPositionRatio_longAccount","buySellRatio","buySellVol","extractLineSeries","raw","keys","k","forEach","d","key","push","time","timestamp","value","parseFloat","makeReq","endpoint","a","this","fetch","proxy","res","ok","Error","statusText","json","console","error","event","target","name","componentDidMount","endpoints","Promise","all","map","setState","ones","longAccount","zeros","buyVol","sellVol","render","includePreFooter","className","onChange","charts","titleize","title","type","autoWidth","height","Component"],"mappings":"0xBASA,IAAMA,EAAQC,aAAS,kBAAM,0DAAsC,CAAEC,KAAK,IAmBpEC,EAAiB,CACrBC,MAAO,wBACPC,SAAS,EACTC,KAAM,UACNC,SAAU,GACVC,UAAW,SACXC,UAAW,UAGQC,E,oBACnB,WAAaC,GAAQ,IAAD,SAClB,cAAMA,IAAN,MAUKC,aAAe,EAAKA,aAAaC,K,yHAAlB,KAEpB,EAAKC,MAAQ,CACXC,SAAU,UACVC,OAAQ,KACRC,OAAQ,UACRC,MAAO,IACPC,QAAS,CACPC,aAAa,EACbC,UAAW,CACTC,YAAa,EACbC,WAAY,EACZC,aAAa,EACbC,8BAA8B,EAC9BC,uBAAuB,EACvBC,eAAe,EACfC,YAAa,UACbvB,SAAS,EACTwB,aAAa,EACbC,gBAAgB,GAElBC,OAAQ,CACNC,WAAY,SAEdC,WAAY,GAaZC,UAAU,OAAD,UAAO/B,IAElBgC,gBAAiB,CAAC,CAAEC,KAAM,KAC1BC,qBAAsB,CAAC,CAAED,KAAM,KAC/BE,qCAAsC,CAAC,CAAEF,KAAM,KAC/CG,wCAAyC,CAAC,CAAEH,KAAM,KAClDI,sCAAuC,CAAC,CAAEJ,KAAM,KAChDK,aAAc,CAAC,CAAEL,KAAM,KACvBM,WAAY,CAAC,CAAEN,KAAM,MAxDL,E,wHA6DpBO,kBAAA,SAAmBC,GAAc,IAC/B,IAAMR,EAAO,GADkB,mBAANS,EAAM,iCAANA,EAAM,kBAE/B,cAAgBA,EAAhB,eAAsB,CAAjB,IAAMC,EAAC,KACVV,EAAKU,GAAK,GAYZ,OATAF,EAAIG,SAAQ,SAAAC,GACV,IAAK,IAAMC,KAAOb,EAChBA,EAAKa,GAAKC,KAAK,CACbC,KAAMH,EAAEI,UAAY,IACpBC,MAAOC,WAAWN,EAAEC,SAKnBb,G,EAGHmB,Q,6BAAN,WAAeC,GAAf,mBAAAC,EAAA,4DACgB,kCACC,2BACTxC,EAASyC,KAAK5C,MAAMG,OACpBC,EAAQwC,KAAK5C,MAAMI,MAJ3B,kBAOsByC,IAASC,2DAAkBJ,EAAtB,YAA0CvC,EAA1C,WAA2DyC,KAAK5C,MAAME,OAAtE,UAAsFE,GAPjH,WAOU2C,EAPV,QAQaC,GARb,uBAQuBC,MAAMF,EAAIG,YARjC,iCASWH,EAAII,QATf,kCAWIC,QAAQC,MAAR,MAXJ,0D,wDAeAvD,aAAA,SAAcwD,GAEZV,KAAK5C,MAAMsD,EAAMC,OAAOC,MAAQF,EAAMC,OAAOhB,MAC7CK,KAAKa,qB,EAGDA,kB,6BAAN,oDAAAd,EAAA,6DACQe,EAAY,CAChB,iCACA,yCACA,4CACA,0CACA,qCANJ,SAQqBC,QAAQC,IAAIF,EAAUG,IAAIjB,KAAKH,QAAQ1C,KAAK6C,QARjE,OAYE,IAAWT,KAJLgB,EARR,OAUM7B,EAAOsB,KAAKf,kBAAkBsB,EAAK,GAAI,kBAAmB,wBAG5DP,KAAKkB,WAAL,MAAiB3B,GAAM,CAAC,CAAEb,KAAMA,EAAKa,KAArC,IAYF,IAAWA,KARXb,EAAOsB,KAAKf,kBAAkBsB,EAAK,GAAI,eACjCY,EAAOzC,EAAK0C,YAAYH,KAAI,YAChC,MAAO,CAAExB,KADqC,EAAXA,KACpBE,MAAO,MAElB0B,EAAQ3C,EAAK0C,YAAYH,KAAI,YACjC,MAAO,CAAExB,KADsC,EAAXA,KACrBE,MAAO,MAGNjB,EAChBsB,KAAKkB,WAAL,kCAA6C3B,GAAQ,CAAC,CAAEb,KAAMA,EAAKa,IAAQ,CAAEb,KAAMyC,GAAQ,CAAEzC,KAAM2C,IAAnG,IAMF,IAAW9B,KAFXb,EAAOsB,KAAKf,kBAAkBsB,EAAK,GAAI,eAGrCP,KAAKkB,WAAL,qCAAgD3B,GAAQ,CAAC,CAAEb,KAAMA,EAAKa,IAAQ,CAAEb,KAAMyC,GAAQ,CAAEzC,KAAM2C,IAAtG,IAMF,IAAW9B,KAFXb,EAAOsB,KAAKf,kBAAkBsB,EAAK,GAAI,eAGrCP,KAAKkB,WAAL,mCAA8C3B,GAAQ,CAAC,CAAEb,KAAMA,EAAKa,IAAQ,CAAEb,KAAMyC,GAAQ,CAAEzC,KAAM2C,IAApG,KAIF3C,EAAOsB,KAAKf,kBAAkBsB,EAAK,GAAI,eAAgB,SAAU,YAE5De,OAAS5C,EAAK4C,OAAOL,KAAI,SAAA3B,GAAC,wBAAUA,EAAV,CAAa5C,MAAO,aACnDgC,EAAK6C,QAAU7C,EAAK6C,QAAQN,KAAI,SAAA3B,GAAC,wBAAUA,EAAV,CAAaK,OAAQL,EAAEK,MAAOjD,MAAO,WAEtEsD,KAAKkB,SAAS,CAAEnC,aAAc,CAAC,CAAEL,KAAMA,EAAKK,iBAC5CiB,KAAKkB,SAAS,CAAElC,WAAY,CAAC,CAAEN,KAAMA,EAAK4C,QAAU,CAAE5C,KAAMA,EAAK6C,YAlDnE,iD,uDAqEAC,OAAA,WACE,OACE,kBAAC,IAAD,CAAQC,kBAAgB,GACtB,yBAAKC,UAAU,0BACb,yBAAKA,UAAU,0BACb,0BAAMA,UAAU,eACd,0CAEE,4BAAQd,KAAK,WAAWjB,MAAOK,KAAK5C,MAAME,OAAQqE,SAAU3B,KAAK9C,cAC/D,4BAAQyC,MAAM,WAAd,aAGJ,wCAEE,4BAAQiB,KAAK,SAASjB,MAAOK,KAAK5C,MAAME,OAAQqE,SAAU3B,KAAK9C,cAC7D,4BAAQyC,MAAM,MAAd,MACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,MAAd,MACA,4BAAQA,MAAM,OAAd,OACA,4BAAQA,MAAM,MAAd,QAIHK,KAAK4B,Y,qCA3CH,IAAD,OACNA,EAAS,CACb,CAAC,gBAAiB5B,KAAK5C,MAAMqB,iBAC7B,CAAC,aAAcuB,KAAK5C,MAAMuB,sBAC1B,CAAC,2BAA4BqB,KAAK5C,MAAMwB,qCAAsC,cAC9E,CAAC,uBAAwBoB,KAAK5C,MAAMyB,wCAAyC,cAC7E,CAAC,6BAA8BmB,KAAK5C,MAAM0B,sCAAuC,cACjF,CAAC,wBAAyBkB,KAAK5C,MAAM2B,cACrC,CAAC,kBAAmBiB,KAAK5C,MAAM4B,WAAY,oBAEvC6C,EAAW,SAACC,GAAD,OAAcA,EAAd,IAAuB,EAAK1E,MAAME,OAAlC,cACjB,OAAOsE,EAAOX,KAAI,kBAAEa,EAAF,KAASpD,EAAT,YAAeqD,OAAf,MAAsB,aAAtB,SAChB,kBAACzF,EAAD,eAAOiD,IAAKuC,EAAOJ,UAAU,cAAcjE,QAAO,iBAAO,EAAKL,MAAMK,QAAlB,CAA2Be,UAAU,OAAD,UAAO/B,EAAP,CAAuBG,KAAMiF,EAASC,UAA5H,MAA+IC,GAAOrD,EAAtJ,IAA8JsD,WAAS,EAACC,OAAQ,e,8BAtKlJC","file":"component---src-pages-charts-js-9bd375d45587de64eaa4.js","sourcesContent":["// NOTE: must run `node proxy.js` for local proxy or else binance api will not work.\n// TODO: https://github.com/node-fetch/node-fetch#request-cancellation-with-abortsignal\n// TODO: https://alligator.io/react/live-search-with-axios/ example for cancel/caching requests\n\nimport React, { Component } from 'react'\nimport fetch from 'node-fetch'\nimport Layout from '../components/Layout'\n\nimport loadable from '@loadable/component'\nconst Chart = loadable(() => import('../components/ChartWrapper'), { ssr: false })\n/*\nconst chart = createChart(document.body, { width: 400, height: 300 });\nconst lineSeries = chart.addLineSeries();\nlineSeries.setData([\n    { time: '2019-04-11', value: 80.01 },\n    { time: '2019-04-12', value: 96.63 },\n    { time: '2019-04-13', value: 76.64 },\n    { time: '2019-04-14', value: 81.89 },\n    { time: '2019-04-15', value: 74.43 },\n    { time: '2019-04-16', value: 80.01 },\n    { time: '2019-04-17', value: 96.63 },\n    { time: '2019-04-18', value: 76.64 },\n    { time: '2019-04-19', value: 81.89 },\n    { time: '2019-04-20', value: 74.43 },\n]);\n\n*/\n\nconst watermarkStyle = {\n  color: 'rgba(11, 94, 29, 0.2)',\n  visible: true,\n  text: 'blep.ai',\n  fontSize: 48,\n  horzAlign: 'center',\n  vertAlign: 'center',\n}\n\nexport default class Charts extends Component {\n  constructor (props) {\n    super(props)\n\n    /* https://fapi.binance.com/futures/data/openInterestHist/?symbol=BTCUSDT&period=5m&limit=300\n    [\n      {\"symbol\":\"BTCUSDT\",\n      \"sumOpenInterest\":\"35024.38800000\",\n      \"sumOpenInterestValue\":\"240368648.56573727\",\n      \"timestamp\":1587528000000}\n    ] */\n\n    this.handleChange = this.handleChange.bind(this)\n\n    this.state = {\n      exchange: 'binance',\n      period: '5m', // \"5m\",\"15m\",\"30m\",\"1h\",\"2h\",\"4h\",\"6h\",\"12h\",\"1d\"\n      symbol: 'BTCUSDT',\n      limit: 300,\n      options: {\n        alignLabels: true,\n        timeScale: {\n          rightOffset: 0,\n          barSpacing: 3,\n          fixLeftEdge: false,\n          lockVisibleTimeRangeOnResize: false,\n          rightBarStaysOnScroll: false,\n          borderVisible: true,\n          borderColor: '#2b2b43',\n          visible: true,\n          timeVisible: true,\n          secondsVisible: false,\n        },\n        layout: {\n          fontFamily: 'Heebo',\n        },\n        priceScale: {\n          // position: 'right',\n          // mode: 0,\n          // autoScale: false,\n          // invertScale: true,\n          // alignLabels: false,\n          // borderVisible: false,\n          // borderColor: '#555ffd',\n          /* scaleMargins: {\n            top: 0.30,\n            bottom: 0.25,\n          }, */\n        },\n        watermark: { ...watermarkStyle },\n      },\n      sumOpenInterest: [{ data: [] }],\n      sumOpenInterestValue: [{ data: [] }],\n      topLongShortAccountRatio_longAccount: [{ data: [] }],\n      globalLongShortAccountRatio_longAccount: [{ data: [] }],\n      topLongShortPositionRatio_longAccount: [{ data: [] }],\n      buySellRatio: [{ data: [] }],\n      buySellVol: [{ data: [] }],\n    }\n  }\n\n  // raw = from binance, keys = the keys to extract and add timestamp to\n  extractLineSeries (raw, ...keys) {\n    const data = {}\n    for (const k of keys) {\n      data[k] = []\n    }\n\n    raw.forEach(d => {\n      for (const key in data) {\n        data[key].push({\n          time: d.timestamp / 1000,\n          value: parseFloat(d[key]),\n        })\n      }\n    })\n\n    return data\n  }\n\n  async makeReq (endpoint) {\n    const proxy = 'https://blep-cors.herokuapp.com'\n    const bnbAPI = 'https://fapi.binance.com'\n    const symbol = this.state.symbol\n    const limit = this.state.limit\n\n    try {\n      const res = await fetch(`${proxy}/${bnbAPI}${endpoint}/?symbol=${symbol}&period=${this.state.period}&limit=${limit}`)\n      if (!res.ok) throw Error(res.statusText)\n      return res.json()\n    } catch (error) {\n      console.error(error)\n    }\n  }\n\n  handleChange (event) {\n    // this.setState({[event.target.name]: event.target.value});\n    this.state[event.target.name] = event.target.value\n    this.componentDidMount()\n  }\n\n  async componentDidMount () {\n    const endpoints = [\n      '/futures/data/openInterestHist',\n      '/futures/data/topLongShortAccountRatio',\n      '/futures/data/globalLongShortAccountRatio',\n      '/futures/data/topLongShortPositionRatio',\n      '/futures/data/takerlongshortRatio',\n    ]\n    const json = await Promise.all(endpoints.map(this.makeReq.bind(this)))\n\n    let data = this.extractLineSeries(json[0], 'sumOpenInterest', 'sumOpenInterestValue')\n\n    for (const key in data) {\n      this.setState({ [key]: [{ data: data[key] }] })\n    }\n\n    // ----\n    data = this.extractLineSeries(json[1], 'longAccount')\n    const ones = data.longAccount.map(({ time }) => {\n      return { time, value: 1 }\n    })\n    const zeros = data.longAccount.map(({ time }) => {\n      return { time, value: 0 }\n    })\n\n    for (const key in data) {\n      this.setState({ [`topLongShortAccountRatio_${key}`]: [{ data: data[key] }, { data: ones }, { data: zeros }] })\n    }\n\n    // ----\n    data = this.extractLineSeries(json[2], 'longAccount')\n\n    for (const key in data) {\n      this.setState({ [`globalLongShortAccountRatio_${key}`]: [{ data: data[key] }, { data: ones }, { data: zeros }] })\n    }\n\n    // ----\n    data = this.extractLineSeries(json[3], 'longAccount')\n\n    for (const key in data) {\n      this.setState({ [`topLongShortPositionRatio_${key}`]: [{ data: data[key] }, { data: ones }, { data: zeros }] })\n    }\n\n    // ----\n    data = this.extractLineSeries(json[4], 'buySellRatio', 'buyVol', 'sellVol')\n\n    data.buyVol = data.buyVol.map(d => ({ ...d, color: 'green' }))\n    data.sellVol = data.sellVol.map(d => ({ ...d, value: -d.value, color: 'red' }))\n\n    this.setState({ buySellRatio: [{ data: data.buySellRatio }] })\n    this.setState({ buySellVol: [{ data: data.buyVol }, { data: data.sellVol }] })\n  }\n\n  get charts () {\n    const charts = [\n      ['Open Interest', this.state.sumOpenInterest],\n      ['Open Value', this.state.sumOpenInterestValue],\n      ['Top Account Longs+Shorts', this.state.topLongShortAccountRatio_longAccount, 'areaSeries'],\n      ['Account Longs+Shorts', this.state.globalLongShortAccountRatio_longAccount, 'areaSeries'],\n      ['Top Positions Longs+Shorts', this.state.topLongShortPositionRatio_longAccount, 'areaSeries'],\n      ['Buy Sell Volume Ratio', this.state.buySellRatio],\n      ['Buy Sell Volume', this.state.buySellVol, 'histogramSeries'],\n    ]\n    const titleize = (title) => `${title} ${this.state.period} | blep.ai`\n    return charts.map(([title, data, type = 'lineSeries']) => (\n      <Chart key={title} className='py-12 my-12' options={{ ...this.state.options, watermark: { ...watermarkStyle, text: titleize(title) } }} {...{ [type]: data }} autoWidth height={600} />\n    ))\n  }\n\n  render () {\n    return (\n      <Layout includePreFooter>\n        <div className='flex flex-col bg-white'>\n          <div className='container px-8 mx-auto'>\n            <main className='py-12 my-12'>\n              <label>\n                Exchange\n                <select name='exchange' value={this.state.period} onChange={this.handleChange}>\n                  <option value='binance'>Binance</option>\n                </select>\n              </label>\n              <label>\n                Period\n                <select name='period' value={this.state.period} onChange={this.handleChange}>\n                  <option value='5m'>5m</option>\n                  <option value='15m'>15m</option>\n                  <option value='30m'>30m</option>\n                  <option value='1h'>1h</option>\n                  <option value='2h'>2h</option>\n                  <option value='4h'>4h</option>\n                  <option value='6h'>6h</option>\n                  <option value='12h'>12h</option>\n                  <option value='1d'>1d</option>\n                </select>\n              </label>\n\n              {this.charts}\n            </main>\n          </div>\n        </div>\n      </Layout>\n    )\n  }\n}\n/*\n/futures/data/topLongShortAccountRatio\n{\n     \"symbol\":\"BTCUSDT\",\n      \"longShortRatio\":\"1.8105\",  // long/short account num ratio of top traders\n      \"longAccount\": \"0.6442\",   // long account num ratio of top traders\n      \"shortAccount\":\"0.3558\",   // long account num ratio of top traders\n      \"timestamp\":\"1583139600000\"\n\n },\n\n/futures/data/globalLongShortAccountRatio\n[\n    {\n         \"symbol\":\"BTCUSDT\",  // long/short account num ratio of all traders\n          \"longShortRatio\":\"0.1960\",  //long account num ratio of all traders\n          \"longAccount\": \"0.6622\",   // short account num ratio of all traders\n          \"shortAccount\":\"0.3378\",\n          \"timestamp\":\"1583139600000\"\n\n     },\n\n/futures/data/topLongShortPositionRatio\n{\n     \"symbol\":\"BTCUSDT\",\n      \"longShortRatio\":\"1.4342\",// long/short position ratio of top traders\n      \"longAccount\": \"0.5891\", // long positions ratio of top traders\n      \"shortAccount\":\"0.4108\", // short positions ratio of top traders\n      \"timestamp\":\"1583139600000\"\n\n },\n\n/futures/data/takerlongshortRatio\n {\n      \"buySellRatio\":\"1.5586\",\n      \"buyVol\": \"387.3300\",\n      \"sellVol\":\"248.5030\",\n      \"timestamp\":\"1585614900000\"\n\n },\n\nhttps://www.binance.com/gateway-api/v1/public/future/data/long-short-account-ratio\nRequest URL: https://www.binance.com/gateway-api/v1/public/future/data/long-short-position-ratio\nRequest URL: https://www.binance.com/gateway-api/v1/public/future/data/global-long-short-account-ratio\nRequest URL: https://www.binance.com/gateway-api/v1/public/future/data/taker-long-short-ratio\nRequest URL: https://www.binance.com/gateway-api/v1/public/future/data/open-interest-stats\n*/\n"],"sourceRoot":""}