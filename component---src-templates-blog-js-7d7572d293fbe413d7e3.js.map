{"version":3,"sources":["webpack:///./src/components/PostCard/index.js","webpack:///./src/templates/blog.js"],"names":["PostCard","posts","filter","post","node","frontmatter","templateKey","map","className","to","fields","slug","key","id","src","cover","alt","title","excerpt","tags","tag","date","PaginationLink","props","test","disabled","text","url","BlogPage","render","pageContext","this","group","index","first","last","previousUrl","toString","nextUrl","websiteSchemaOrgJSONLD","config","siteUrl","name","siteTitle","alternateName","siteTitleAlt","Layout","type","JSON","stringify","Component"],"mappings":"8OAqCeA,EAlCE,SAAC,GAChB,OAD8B,EAAZC,MAGbC,QAAO,SAAAC,GAAI,MAA0C,iBAAtCA,EAAKC,KAAKC,YAAYC,eACrCC,KAAI,gBAASJ,EAAT,EAAGC,KAAH,OACH,yBAAKI,UAAU,aACb,yBAAKA,UAAU,qCACb,kBAAC,OAAD,CAAMA,UAAU,mBAAmBC,GAAIN,EAAKO,OAAOC,KAAMC,IAAKT,EAAKU,IACjE,yBAAKL,UAAU,SAASM,IAAKX,EAAKE,YAAYU,MAAOC,IAAKb,EAAKE,YAAYY,QAC3E,yBAAKT,UAAU,aACb,yBAAKA,UAAU,0BAA0BL,EAAKE,YAAYY,OAC1D,uBAAGT,UAAU,2BACVL,EAAKe,UAGV,yBAAKV,UAAU,aACZL,EAAKE,YAAYc,KAAKZ,KAAI,SAAAa,GAAG,OAC5B,0BAAMZ,UAAU,sGAAhB,IAAuHY,OAG3H,yBAAKZ,UAAU,aAEb,yBAAKA,UAAU,WACb,uBAAGA,UAAU,8BAAb,aACA,uBAAGA,UAAU,iBAAiBL,EAAKE,YAAYgB,e,YCpBjE,IAAMC,EAAiB,SAAAC,GACrB,OAAKA,EAAMC,KAQP,0BAAMC,UAAQ,EAACjB,UAAU,uEACtBe,EAAMG,MAPT,kBAAC,OAAD,CAAMjB,GAAE,SAAWc,EAAMI,IAAOnB,UAAU,qBACvCe,EAAMG,OAYME,E,gLACnBC,OAAA,WAAW,IACDC,EAAgBC,KAAKR,MAArBO,YACAE,EAA8BF,EAA9BE,MAAOC,EAAuBH,EAAvBG,MAAOC,EAAgBJ,EAAhBI,MAAOC,EAASL,EAATK,KACvBC,EAAcH,EAAQ,GAAM,EAAI,IAAMA,EAAQ,GAAGI,WACjDC,GAAWL,EAAQ,GAAGI,WAAa,IAEnCE,EAAyB,CAC7B,WAAY,oBACZ,QAAS,UACTZ,IAAKa,IAAOC,QACZC,KAAMF,IAAOG,UACbC,cAAeJ,IAAOK,aAAeL,IAAOK,aAAe,IAG7D,OACE,kBAACC,EAAA,EAAD,KACE,yBAAKtC,UAAU,0BACb,yBAAKA,UAAU,0BACb,kBAAC,IAAD,KACE,4CAEA,4BAAQuC,KAAK,uBACVC,KAAKC,UAAUV,KAYpB,6BAAS/B,UAAU,6BACjB,kBAAC,EAAD,CAAUP,MAAO+B,KAGnB,6BAASxB,UAAU,WACjB,yBAAKA,UAAU,uBACb,kBAAC,EAAD,CAAgBgB,KAAMU,EAAOP,IAAKS,EAAaV,KAAK,kBACpD,kBAAC,EAAD,CAAgBF,KAAMW,EAAMR,IAAKW,EAASZ,KAAK,oB,GA1CzBwB","file":"component---src-templates-blog-js-7d7572d293fbe413d7e3.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\n\nconst PostCard = ({ posts }) => {\n  return (\n    posts\n      .filter(post => post.node.frontmatter.templateKey === 'article-page')\n      .map(({ node: post }) => (\n        <div className=\"w-1/3 p-4\">\n          <div className=\"shadow-lg rounded overflow-hidden\">\n            <Link className='has-text-primary' to={post.fields.slug} key={post.id}>\n              <img className=\"w-full\" src={post.frontmatter.cover} alt={post.frontmatter.title} />\n              <div className=\"px-6 py-4\">\n                <div className=\"font-bold text-xl mb-2\">{post.frontmatter.title}</div>\n                <p className=\"text-gray-700 text-base\">\n                  {post.excerpt}\n                </p>\n              </div>\n              <div className=\"px-6 py-4\">\n                {post.frontmatter.tags.map(tag => (\n                  <span className=\"inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700 mr-2 last:mr-0\">#{tag}</span>\n                ))}\n              </div>\n              <div className=\"px-6 py-4\">\n                {/*<img className=\"w-10 h-10 rounded-full mr-4\" src=\"/img/jonathan.jpg\" alt=\"Avatar of Jonathan Reinink\" />*/}\n                <div className=\"text-sm\">\n                  <p className=\"text-gray-900 leading-none\">Blep Team</p>\n                  <p className=\"text-gray-600\">{post.frontmatter.date}</p>\n                </div>\n              </div>\n            </Link>\n          </div>\n        </div>\n      ))\n  )\n}\n\nexport default PostCard\n","import React, { Component } from 'react'\nimport { Link } from 'gatsby'\nimport config from '../../config'\nimport Helmet from 'react-helmet'\nimport PostCard from '../components/PostCard'\nimport Layout from '../components/Layout'\n\nconst PaginationLink = props => {\n  if (!props.test) {\n    return (\n      <Link to={`/blog/${props.url}`} className='button is-rounded'>\n        {props.text}\n      </Link>\n    )\n  } else {\n    return (\n      <span disabled className='g-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded'>\n        {props.text}\n      </span>\n    )\n  }\n}\n\nexport default class BlogPage extends Component {\n  render () {\n    const { pageContext } = this.props\n    const { group, index, first, last } = pageContext\n    const previousUrl = index - 1 === 1 ? '' : (index - 1).toString()\n    const nextUrl = (index + 1).toString() + '/'\n\n    const websiteSchemaOrgJSONLD = {\n      '@context': 'http://schema.org',\n      '@type': 'WebSite',\n      url: config.siteUrl,\n      name: config.siteTitle,\n      alternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\n    }\n\n    return (\n      <Layout>\n        <div className=\"bg-white flex flex-col\">\n          <div className=\"container mx-auto px-8\">\n            <Helmet>\n              <title>Blep Blog</title>\n              {/* Schema.org tags */}\n              <script type='application/ld+json'>\n                {JSON.stringify(websiteSchemaOrgJSONLD)}\n              </script>\n            </Helmet>\n\n            {/*<main className=\"flex flex-wrap items-center text-center md:text-left my-6 py-24 lg:px-24\">\n              <div className=\"w-full md:w-full whitespace-pre-line\">\n                <h1 className=\"text-3xl text-black leading-tight mb-6\">\n                  Blog\n                </h1>\n              </div>\n            </main>*/}\n\n            <section className='flex flex-wrap mb-4 my-12'>\n              <PostCard posts={group} />\n            </section>\n\n            <section className='section'>\n              <div className='buttons is-centered'>\n                <PaginationLink test={first} url={previousUrl} text='Previous Page' />\n                <PaginationLink test={last} url={nextUrl} text='Next Page' />\n              </div>\n            </section>\n\n          </div>\n        </div>\n      </Layout>\n    )\n  }\n}\n"],"sourceRoot":""}