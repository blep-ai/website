{"version":3,"file":"cms.bf8f6bd43c8881449fd4.hot-update.js","sources":["webpack:///./src/components/SubscribeForm/index.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport MailchimpSubscribe from \"react-mailchimp-subscribe\"\nconst url = \"//meowware.us19.list-manage.com/subscribe/post?u=93c68bc3169d90850d9cf570e&amp;id=11e35c42eb\";\n\nclass CustomForm extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      EMAIL: \"\",\n      b_93c68bc3169d90850d9cf570e_11e35c42eb: \"\"\n    }\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault()\n    let email = this.state.EMAIL\n\n    email &&\n    email.indexOf(\"@\") > -1 &&\n    this.props.onValidated(this.state)\n  }\n\n  handleChange(event) {\n    const {name, value} = event.target\n    this.setState({[name]: value})\n  }\n\n  render() {\n    const { status, message, onValidated, className, inputClass1, inputPlaceholder1, inputClass2, inputPlaceholder2, buttonClass, errorClass } = this.props\n\n    return (\n      <div>\n        <form\n          onSubmit={this.handleSubmit}\n          className={`${className} subscribe`}\n        >\n          <input\n            className={inputClass1}\n            placeholder={inputPlaceholder1}\n            type=\"email\"\n            name=\"EMAIL\"\n            value={this.state.EMAIL}\n            onChange={this.handleChange}\n          />\n          <input\n            className={inputClass2}\n            placeholder={inputPlaceholder2}\n            type=\"email\"\n            name=\"EMAIL\"\n            value={this.state.EMAIL}\n            onChange={this.handleChange}\n          />\n\n          {/*Anti bot*/}\n          <div style={{position: \"absolute\", left: \"-5000px\", ariaHidden:\"true\"}}>\n            <input type=\"text\" name=\"b_93c68bc3169d90850d9cf570e_11e35c42eb\" tabIndex=\"-1\" value={this.state.b_93c68bc3169d90850d9cf570e_11e35c42eb} onChange={this.handleChange} />\n          </div>\n\n          <button className={buttonClass}>\n            {status === \"sending\" ? <span className=\"text-blue-200\">Submit</span> : `Submit`}\n          </button>\n        </form>\n\n        <div className={errorClass}>\n          {status === \"error\" && (\n            <div\n              className=\"text-red-600\"\n              dangerouslySetInnerHTML={{ __html: message }}\n            />\n          )}\n          {status === \"success\" && (\n            <div\n              className=\"text-green-600\"\n              dangerouslySetInnerHTML={{ __html: message }}\n            />\n          )}\n        </div>\n      </div>\n    )\n  }\n}\n\nCustomForm.defaultProps = {\n  inputPlaceholder1: \"Sign up for the upcoming beta!\",\n  inputPlaceholder2: \"Sign up for the beta!\",\n  className: \"w-full sm:max-w-sm flex items-center pb-2\",\n  inputClass1: \"hidden sm:block rounded-none w-full px-4 py-2 mr-0 appearance-none bg-indigo-100 focus:outline-none focus:bg-white border-indigo-500 text-gray-900 border-2 box-border border-indigo-100 placeholder-gray-600 text-sm\",\n  inputClass2: \"sm:hidden rounded-none w-full px-4 py-2 mr-0 appearance-none bg-indigo-100 focus:outline-none focus:bg-white border-indigo-500 text-gray-900 border-2 box-border border-indigo-100 placeholder-gray-600 text-sm\",\n  buttonClass: \"transition duration-150 ease-in-out rounded-none p-2 px-8 appearance-none bg-indigo-500 text-white border-2 box-border border-indigo-500 hover:bg-indigo-400 text-sm font-bold focus:outline-none focus:bg-indigo-700\",\n  errorClass: \"w-full sm:max-w-sm flex items-center text-xs whitespace-pre-line\"\n}\n\nexport default function (props) {\n  return (\n    <MailchimpSubscribe\n      url={url}\n      render={({ subscribe, status, message }) => (\n        <CustomForm\n          status={status}\n          message={message}\n          onValidated={subscribe}\n          {...props}\n        />\n      )}\n    />\n  )\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAKA;AACA;AARA;AASA;AACA;;;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;;;;;;;;AA/EA;AACA;AAgFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AACA;AASA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AAfA;;;;;;;;;;AA7FA;AAEA;;;;;;;;;;;;;;A","sourceRoot":""}